name: Build and deploy

on:
  push:
    branches: [ master ]
  release:
    types: [ published ]

env:
  GRADLE_USER_HOME: .gradle

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Build with Gradle
        run: ./gradlew build
      - name: Upload all output libs
        uses: actions/upload-artifact@v3.0.0
        with:
          name: output-libs
          path: "*/build/libs"

      - name: Snapshot build deploy
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository_owner == 'libgdx'
        run: ./gradlew build publish
        env:
          ORG_GRADLE_PROJECT_NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Import GPG key
        if: github.event_name == 'release' && github.repository_owner == 'libgdx'
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@1c6a9e9d3594f2d743f1b1dd7669ab0dfdffa922
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Release build deploy
        if: github.event_name == 'release' && github.repository_owner == 'libgdx'
        run: ./gradlew build publish -PRELEASE -Psigning.gnupg.keyId=${{ secrets.GPG_KEYID }} -Psigning.gnupg.passphrase=${{ secrets.GPG_PASSPHRASE }} -Psigning.gnupg.keyName=${{ secrets.GPG_KEYID }}
        env:
          ORG_GRADLE_PROJECT_NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
